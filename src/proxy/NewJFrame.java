/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proxy;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Rodrigo
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        Textobloquear = new javax.swing.JTextField();
        BotonBloquear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Textoruta = new javax.swing.JTextField();
        BotonRuta = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        textplain = new javax.swing.JCheckBox();
        imgjpeg = new javax.swing.JCheckBox();
        txtcss = new javax.swing.JCheckBox();
        txthtml = new javax.swing.JCheckBox();
        imgbmp = new javax.swing.JCheckBox();
        imgsvg = new javax.swing.JCheckBox();
        Reset_type = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Obligatorio3");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(100, 200));

        jLabel1.setText("Bloquear trafico de la pagina:");

        Textobloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextobloquearActionPerformed(evt);
            }
        });

        BotonBloquear.setText("Bloquear");
        BotonBloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBloquearActionPerformed(evt);
            }
        });

        jLabel2.setText("Almacenar el tr√°fico del tipo");

        Textoruta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextorutaActionPerformed(evt);
            }
        });

        BotonRuta.setText("Aceptar");
        BotonRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRutaActionPerformed(evt);
            }
        });

        jLabel3.setText("Ruta donde se almacenan los datos:");

        jButton1.setText("Desboquear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Restablecer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        textplain.setText("text/plain");
        textplain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textplainActionPerformed(evt);
            }
        });

        imgjpeg.setText("image/jpeg");
        imgjpeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgjpegActionPerformed(evt);
            }
        });

        txtcss.setText("text/css");
        txtcss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcssActionPerformed(evt);
            }
        });

        txthtml.setText("text/html");
        txthtml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthtmlActionPerformed(evt);
            }
        });

        imgbmp.setText("image/bmp");
        imgbmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgbmpActionPerformed(evt);
            }
        });

        imgsvg.setText("image/svg+xml");
        imgsvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgsvgActionPerformed(evt);
            }
        });

        Reset_type.setText("Restablecer");
        Reset_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset_typeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Textoruta, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Textobloquear, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BotonBloquear))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textplain)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(imgjpeg)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtcss))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txthtml)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(imgbmp)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(imgsvg)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Reset_type)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))))
                .addComponent(BotonRuta)
                .addContainerGap(9, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Textobloquear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonBloquear)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textplain)
                            .addComponent(imgjpeg)
                            .addComponent(txtcss))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txthtml)
                            .addComponent(imgbmp)
                            .addComponent(imgsvg)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Reset_type)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Textoruta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonRuta)
                    .addComponent(jButton2))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
static public String bloqueados;
    private void TextobloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextobloquearActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_TextobloquearActionPerformed

    private void TextorutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextorutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextorutaActionPerformed

    private void BotonBloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBloquearActionPerformed
        // TODO add your handling code here:
        bloqueados = "bloq_" + Textobloquear.getText();
        enviar(bloqueados);

    }//GEN-LAST:event_BotonBloquearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String desbloqueado = "desbl_" + Textobloquear.getText();
        enviar(desbloqueado);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BotonRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRutaActionPerformed
         ruta += Textoruta.getText();// TODO add your handling code here:    
        enviar(ruta);
    }//GEN-LAST:event_BotonRutaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        enviar("reset");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void imgjpegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgjpegActionPerformed
        // TODO add your handling code here:       

        if (isActive())
            enviar(jpeg);
    }//GEN-LAST:event_imgjpegActionPerformed

    private void textplainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textplainActionPerformed
        // TODO add your handling code here:

        if (isActive())
            enviar(plain);
    }//GEN-LAST:event_textplainActionPerformed

    private void Reset_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset_typeActionPerformed
        // TODO add your handling code here:
        imgjpeg.setSelected(false);
        textplain.setSelected(false);
        txtcss.setSelected(false);
        txthtml.setSelected(false);
        imgbmp.setSelected(false);
        imgsvg.setSelected(false);
        enviar("restyp");
        imgjpeg.setSelected(false);
        textplain.setSelected(false);
        txtcss.setSelected(false);
        txthtml.setSelected(false);
        imgbmp.setSelected(false);
        imgsvg.setSelected(false);
    }//GEN-LAST:event_Reset_typeActionPerformed

    private void txtcssActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcssActionPerformed

        if (isActive())
            enviar(css);  
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcssActionPerformed

    private void txthtmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthtmlActionPerformed

        if (isActive())
            enviar(html);         // TODO add your handling code here:
    }//GEN-LAST:event_txthtmlActionPerformed

    private void imgbmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgbmpActionPerformed

        if (isActive()) {
            enviar(bmp);
        }
        System.out.println(cliente);
        // TODO add your handling code here:
    }//GEN-LAST:event_imgbmpActionPerformed

    private void imgsvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgsvgActionPerformed

        if (isActive())

            enviar(svg);        // TODO add your handling code here:
    }//GEN-LAST:event_imgsvgActionPerformed

    /**
     * @param args the command line arguments
     */
    static String ruta = "rut_";
    static DataInputStream in;
    static String cliente;
    static String plain = "type_text/plain";
    static String svg = "type_image/svg+xml";
    static String bmp = "type_image/bmp";
    static String html = "type_text/html";
    static String css = "type_text/css";
    static String jpeg = "type_image/jpeg";

    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                new NewJFrame().setVisible(true);
               
                
            }
        }); try {
                   enviar("");
                } catch (Exception e) {
                }
    }

    public static void comprobar(String x) {
        String[] aux;
        aux = x.split(",");
        for (int i = 0; i < aux.length; i++) {
            if (aux[i].contains(plain)) {
                textplain.setSelected(true);
            }
            if (aux[i].contains(svg)) {
                imgsvg.setSelected(true);
            }
            if (aux[i].contains(bmp)) {
                imgbmp.setSelected(true);
            }
            if (aux[i].contains(html)) {
                txthtml.setSelected(true);
            }
            if (aux[i].contains(css)) {
                txtcss.setSelected(true);
            }
            if (aux[i].contains(jpeg)) {
                imgjpeg.setSelected(true);
            }
            if (aux[i].contains(ruta)) {
                String set[];
                set = aux[i].split("_");
                Textoruta.setText(set[1]);
            }
        }
    }
static String ip;
public NewJFrame(String ip) {
        this.ip = ip;
    }
    public static void enviar(String dato) {

        Socket s = null;
        DataOutputStream out = null;
        try {
            s = new Socket(ip, 6666);
        } catch (IOException ex) {
            System.out.println("Error estabecioendo conexion");
        }
        try {
            out = new DataOutputStream(s.getOutputStream());
            in = new DataInputStream(s.getInputStream());
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            cliente = in.readUTF();
            out.writeUTF(dato);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        comprobar(cliente);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBloquear;
    private static javax.swing.JButton BotonRuta;
    private javax.swing.JButton Reset_type;
    private javax.swing.JTextField Textobloquear;
    private static javax.swing.JTextField Textoruta;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private static javax.swing.JCheckBox imgbmp;
    private static javax.swing.JCheckBox imgjpeg;
    private static javax.swing.JCheckBox imgsvg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private static javax.swing.JCheckBox textplain;
    private static javax.swing.JCheckBox txtcss;
    private static javax.swing.JCheckBox txthtml;
    // End of variables declaration//GEN-END:variables
}
